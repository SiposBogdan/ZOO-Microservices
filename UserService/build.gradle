plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-crypto'
	implementation 'org.springframework.security:spring-security-web'


	runtimeOnly 'com.mysql:mysql-connector-j'

	// CSV export
	implementation 'com.opencsv:opencsv:5.7.1'

	// Jackson & XML
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'

	// Lombok (optional)
	compileOnly 'org.projectlombok:lombok:1.18.28'
	annotationProcessor 'org.projectlombok:lombok:1.18.28'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly     'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly     'io.jsonwebtoken:jjwt-jackson:0.11.5'


	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Dacă nu este adus implicit, adaugă și API-ul Jakarta Mail
}


tasks.named('test') {
	useJUnitPlatform()
}
